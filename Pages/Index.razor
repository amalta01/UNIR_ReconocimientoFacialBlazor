@page "/"

<PageTitle>Index</PageTitle>

@inject ReconocimientoFacialBlazor.Services.IFaceRecognitionService FaceRecognitionService

<h3>Comparador Facial</h3>

<div>
    <label>Imagen 1:</label>
    <InputFile OnChange="LoadImage1" />
    @if (image1Preview != null)
    {
        <div>
            <img src="@image1Preview" style="max-width:200px; max-height:200px; margin:5px; border:1px solid #ccc;" />
        </div>
    }
</div>
<div>
    <label>Imagen 2:</label>
    <InputFile OnChange="LoadImage2" />
    @if (image2Preview != null)
    {
        <div>
            <img src="@image2Preview" style="max-width:200px; max-height:200px; margin:5px; border:1px solid #ccc;" />
        </div>
    }
</div>

<br />
<button @onclick="CompararRostros" disabled="@(!CanCompare)">Comparar Rostros</button>

@if (distance.HasValue)
{
    <div class="alert alert-info mt-3">
        <strong>Distancia:</strong> @distance.Value.ToString("F2")
        <br />
        @(distance.Value < 0.6 ? "¡Coincidencia probable!" : "No parecen coincidir")
    </div>
}

@code {
    private IBrowserFile? image1;
    private IBrowserFile? image2;
    private string? image1Preview;
    private string? image2Preview;
    private float? distance;

    private async Task LoadImage1(InputFileChangeEventArgs e)
    {
        image1 = e.File;
        distance = null;
        if (image1 != null)
        {
            using var ms = new MemoryStream();
            await image1.OpenReadStream().CopyToAsync(ms);
            var bytes = ms.ToArray();
            image1Preview = $"data:{image1.ContentType};base64,{Convert.ToBase64String(bytes)}";
        }
        else
        {
            image1Preview = null;
        }
    }

    private async Task LoadImage2(InputFileChangeEventArgs e)
    {
        image2 = e.File;
        distance = null;
        if (image2 != null)
        {
            using var ms = new MemoryStream();
            await image2.OpenReadStream().CopyToAsync(ms);
            var bytes = ms.ToArray();
            image2Preview = $"data:{image2.ContentType};base64,{Convert.ToBase64String(bytes)}";
        }
        else
        {
            image2Preview = null;
        }
    }

    private bool CanCompare => image1 != null && image2 != null;

    private async Task CompararRostros()
    {
        if (image1 == null || image2 == null) return;

        using var stream1 = image1.OpenReadStream();
        using var stream2 = image2.OpenReadStream();
        distance = await FaceRecognitionService.CompareAsync(stream1, stream2);
    }
}
